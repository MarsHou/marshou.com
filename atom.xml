<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mars Hou</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://marshou.github.io/"/>
  <updated>2019-08-20T11:40:07.516Z</updated>
  <id>http://marshou.github.io/</id>
  
  <author>
    <name>Mars Hou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用HEXO搭建个人网站</title>
    <link href="http://marshou.github.io/post/use-hexo-build-personal-website/"/>
    <id>http://marshou.github.io/post/use-hexo-build-personal-website/</id>
    <published>2019-08-20T07:33:13.000Z</published>
    <updated>2019-08-20T11:40:07.516Z</updated>
    
    <content type="html"><![CDATA[<h3 id="工作步骤">工作步骤<a href="post/use-hexo-build-personal-website#工作步骤"></a></h3><ul><li><p>MacOS电脑</p></li><li><p>安装Hexo之前，安装好 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> , <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></p></li><li><p>使用 <code>npm install -g hexo-cli</code> 安装hexo程序</p></li><li><p>初始化BLOG</p></li><li><p>本地运行调试</p></li><li><p>部署</p></li></ul><h3 id="开始">开始<a href="post/use-hexo-build-personal-website#开始"></a></h3><h4 id="准备工作">准备工作<a href="post/use-hexo-build-personal-website#准备工作"></a></h4><h5 id="安装Node-js">安装Node.js<a href="post/use-hexo-build-personal-website#安装Node-js"></a></h5><p>安装 Node.js 的最佳方式是使用 <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a>。nvm 的开发者提供了一个自动安装 nvm 的简单脚本：</p><p>cURL:</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | sh</span><br></pre></td></tr></table></div></figure><p>Wget:</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | sh</span><br></pre></td></tr></table></div></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable</span><br></pre></td></tr></table></div></figure><p>或者您也可以下载 <a href="http://nodejs.org/" target="_blank" rel="noopener">安装程序</a> 来安装。</p><h5 id="安装Git">安装Git<a href="post/use-hexo-build-personal-website#安装Git"></a></h5><p>如果你的电脑安装了Xcode，即已安装好git，如果没有，可以使用以下命令安装Git</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></div></figure><p>检测是否安装了Git</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git</span><br><span class="line">usage: git [--version] [--help] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           &lt;command&gt; [&lt;args&gt;]</span><br></pre></td></tr></table></div></figure><h5 id="安装Hexo">安装Hexo<a href="post/use-hexo-build-personal-website#安装Hexo"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></div></figure><p>安装完成后，输入命令 <code>hexo</code> 以检测是否安装成功。</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo</span><br><span class="line">Usage: hexo &lt;command&gt;</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  help     Get help on a command.  init     Create a new Hexo folder.  version  Display version information.</span><br><span class="line">Global Options:</span><br><span class="line">  --config  Specify config file instead of using _config.yml  --cwd     Specify the CWD  --debug   Display all verbose messages in the terminal  --draft   Display draft posts  --safe    Disable all plugins and scripts  --silent  Hide output on console</span><br><span class="line">For more help, you can use 'hexo help [command]' for the detailed information</span><br><span class="line">or you can check the docs: http://hexo.io/docs/</span><br></pre></td></tr></table></div></figure><p>以上是安装成功的输出。</p><h3 id="搭建BLOG">搭建BLOG<a href="post/use-hexo-build-personal-website#搭建BLOG"></a></h3><h4 id="创建BLOG">创建BLOG<a href="post/use-hexo-build-personal-website#创建BLOG"></a></h4><p>首先初始化一个BLOG框架结构</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo init blog</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">Cloning into '/Users/Mars/blog'...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">found 1 low severity vulnerability</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` for details</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></div></figure><p>然后命令进入blog文件夹开启本地调试服务。</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd blog</span><br><span class="line"><span class="meta">$</span> hexo server</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></div></figure><p>用浏览器打开 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 查看BLOG的展示效果。</p><h4 id="部署BLOG">部署BLOG<a href="post/use-hexo-build-personal-website#部署BLOG"></a></h4><h5 id="拥有GitHub账号">拥有GitHub账号<a href="post/use-hexo-build-personal-website#拥有GitHub账号"></a></h5><p>打开 <a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a> 注册账号</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/register_github.jpg?m=webp&q=80" alt="sign up" class="article-img"></p><p>设置密码</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/set_up_accout.jpg?m=webp&q=80" alt="set up account" class="article-img"></p><p>选择免费即可，下面的订阅可以去除☑️</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/set_free_account.jpg?m=webp&q=80" alt="set free account" class="article-img"></p><p>第三步可直接跳过</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/set_up_skip.jpg?m=webp&q=80" alt="set up skip" class="article-img"></p><p>账号创建成功，需要验证邮箱</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/please_verify_email.jpg?m=webp&q=80" alt="verify email" class="article-img"></p><p>查看邮件，点击Verify email address</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/verify_email.jpg?m=webp&q=80" alt="verify email" class="article-img"></p><h5 id="创建-GitHub-Pages-仓库">创建 <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> 仓库<a href="post/use-hexo-build-personal-website#创建-GitHub-Pages-仓库"></a></h5><p>点击Verify email address 后会自动打开创建仓库的页面，填入<code>username.github.io</code>, <code>username</code> 要对应上你的GitHub用户名，选择<code>Public</code> （微软收购后，GitHub pages不支持private），点击 <code>Create repository</code> 按钮。</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/create_repository.jpg?m=webp&q=80" alt="create repository" class="article-img"></p><p>创建成功按下图所示点击1处切换SSH，点击2处copy内容</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/copy_ssh.jpg?m=webp&q=80" alt="copy ssh" class="article-img"></p><h5 id="配置BLOG">配置BLOG<a href="post/use-hexo-build-personal-website#配置BLOG"></a></h5><p>安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>。</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></div></figure><p>打开blog目录下的_config.yml文件，下图所用IDE为 <a href="https://code.visualstudio.com/download" target="_blank" rel="noopener">VSCode</a>，把上面copy的内容粘贴到<code>repo</code>的值处</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/config_deploy.jpg?m=webp&q=80" alt="Config deploy" class="article-img"></p><figure class="highlight yml"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:UserName/username.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></div></figure><h5 id="配置本地Git信息以及添加SSH-keys">配置本地Git信息以及添加SSH keys<a href="post/use-hexo-build-personal-website#配置本地Git信息以及添加SSH-keys"></a></h5><p>1、设置全局本地用户信息</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name 'username'</span><br><span class="line">git config --global user.email 'username@gmail.com'</span><br></pre></td></tr></table></div></figure><p>2、生成SSH keys</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ssh-keygen -t rsa -b 4096 -C "username@gmail.com"</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/username/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in /Users/username/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /Users/username/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:0UP0s5TabjLIH8uGANrwx3OQkrOO7dD1KRU2xoLePjE username@gmail.com</span><br><span class="line">The key's randomart image is:</span><br><span class="line">+---[RSA 4096]----+</span><br><span class="line">|         .o      |</span><br><span class="line">|     . . o . .   |</span><br><span class="line">|    ....B o =    |</span><br><span class="line">|  ..=.o+ + = o   |</span><br><span class="line">|   =.*E.S . o    |</span><br><span class="line">|  ..+o=*.o .     |</span><br><span class="line">|  .+..++=.+ o    |</span><br><span class="line">|  ..o  o.o.*     |</span><br><span class="line">|   ..    .+      |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></div></figure><p>蓝色框中的三行</p><ul><li>第一行按回车确认路径</li><li>第二行输入密码（可回车不设置密码）</li><li>第三行确认密码（如未设置密码也回车）</li></ul><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/generate_ssh_keys.jpg?m=webp&q=80" alt="generate keys" class="article-img"></p><p>3、GitHub add SSH keys</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cat ~/.ssh/id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8dLDsmqRT183PpehwUxtlwfuEJkGlHCp5poFY4mbr7+Amoa3MOjTM6L5APZsvOk2qkOImxwt222P5nT4t/cHE4NVx4XuwcT8Zjef+o+tSBSlx884RfX8nk23SK4KK/Em2FZhdPphSGygCEcNEsw6zMJhIOYz/8m75UrpIKNyvYFh96vrj9pVCN8sT1rGdbVo6pI+bVmyDrCxJfs/9bPHaNPBrHbVBS username@guanaitong.com</span><br></pre></td></tr></table></div></figure><p>拷贝内容进入 <a href="https://github.com/settings/ssh/new" target="_blank" rel="noopener">添加SSH keys</a> 页面粘贴到Key的内容框，title随意填。点击<code>Add SSH key</code>按钮</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/fill_keys.jpg?m=webp&q=80" alt="add keys" class="article-img"></p><h5 id="部署BLOG到GitHub-Pages">部署BLOG到GitHub Pages<a href="post/use-hexo-build-personal-website#部署BLOG到GitHub-Pages"></a></h5><p>使用命令<code>hexo d -g</code></p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo d -g</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 104 ms</span><br><span class="line">INFO  0 files generated in 151 ms</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">Warning: Permanently added the RSA host key for IP address '13.229.188.59' to the list of known hosts.</span><br><span class="line">Enumerating objects: 48, done.</span><br><span class="line">Counting objects: 100% (48/48), done.</span><br><span class="line">Delta compression using up to 4 threads</span><br><span class="line">Compressing objects: 100% (38/38), done.</span><br><span class="line">Writing objects: 100% (48/48), 507.41 KiB | 1.87 MiB/s, done.</span><br><span class="line">Total 48 (delta 5), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (5/5), done.</span><br><span class="line">To github.com:username/username.github.io.git</span><br><span class="line"> * [new branch]      HEAD -&gt; master</span><br><span class="line">Branch 'master' set up to track remote branch 'master' from 'git@github.com:username/username.github.io.git'.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></div></figure><p>部署完成后浏览器打开BLOG地址 <a href="username.github.io">username.github.io</a> 查看部署效果</p><p><img src="https://marshou.github.io/post/use-hexo-build-personal-website/images/hexo_index.jpg?m=webp&q=80" alt="hexo index" class="article-img"></p><h3 id="常用HEXO-命令">常用HEXO 命令<a href="post/use-hexo-build-personal-website#常用HEXO-命令"></a></h3><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 初始化blog</span><br><span class="line"><span class="meta">$</span> hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建新文章</span><br><span class="line"><span class="meta">$</span> hexo new "文章标题"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 安装插件模块</span><br><span class="line"><span class="meta">$</span> npm install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 清除缓存</span><br><span class="line"><span class="meta">$</span> hexo clean</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 生成blog静态文件</span><br><span class="line"><span class="meta">$</span> hexo generate</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 开启本地服务</span><br><span class="line"><span class="meta">$</span> hexo server</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 部署</span><br><span class="line"><span class="meta">$</span> hexo deploy</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 部署+生成blog静态文件</span><br><span class="line"><span class="meta">$</span> hexo d -g</span><br></pre></td></tr></table></div></figure><p>以上为搭建全部流程，如有未懂之处，可留言。<br>Enjoy!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;工作步骤&quot;&gt;工作步骤&lt;a href=&quot;post/use-hexo-build-personal-website#工作步骤&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MacOS电脑&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装Hexo之前，安装好 &lt;a href=&quot;ht
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>被Jenkins坑过的日子</title>
    <link href="http://marshou.github.io/post/Fix-Jenkins-bug-life/"/>
    <id>http://marshou.github.io/post/Fix-Jenkins-bug-life/</id>
    <published>2019-07-12T02:57:25.000Z</published>
    <updated>2019-08-20T05:53:20.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言<a href="post/Fix-Jenkins-bug-life#前言"></a></h2><h3 id="环境">环境<a href="post/Fix-Jenkins-bug-life#环境"></a></h3><p>MacOS</p><h3 id="场景">场景<a href="post/Fix-Jenkins-bug-life#场景"></a></h3><p>使用Python 抓取一个JS 动态渲染的页面，使用到了Scrapy、Scrapy-Splash 框架，运用了Doker 容器。</p><h2 id="坑来了">坑来了<a href="post/Fix-Jenkins-bug-life#坑来了"></a></h2><h3 id="No1-、Jenkins-里直接写Scrapy、Pip-等命令出现Command-not-found-错误">No1 、Jenkins 里直接写Scrapy、Pip 等命令出现Command not found 错误<a href="post/Fix-Jenkins-bug-life#No1-、Jenkins-里直接写Scrapy、Pip-等命令出现Command-not-found-错误"></a></h3><p><strong>案件分析：</strong>先看看Jenkins 的环境变量，进入Jenkins 首页 -&gt; <code>Mange Jenkins</code> -&gt; <code>System Information</code>, 找到<code>Environment Variables</code> （环境变量）表格，在表格里找到<code>PATH</code>的值，默认是<code>/usr/bin:/bin:/usr/sbin:/sbin</code>, 再看看你的<code>pip</code>、<code>scrapy</code> 安装在哪的？</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> which pip</span><br><span class="line">/usr/local/bin/pip</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> which scrapy</span><br><span class="line">/usr/local/bin/scrapy</span><br></pre></td></tr></table></div></figure><p>So. Why command not found? Because may be it.</p><p><strong>解决办法：</strong>就是给Jenkins 修改环境变量，我尝试到的办法是在<code>Configura System</code> -&gt; <code>Global properties</code> 里勾上<code>Environment variables</code> 增加键值对<code>Name</code> 填写<code>PATH</code>， <code>Value</code> 填写<code>/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</code>， （没有尝试只填写/usr/local/bin会怎样，有钻研精神的同学可以试试）。</p><h3 id="No2、-在构建的脚本里执行引入了第三方框架的Python-文件，出现ImportError-No-module-named-错误">No2、 在构建的脚本里执行引入了第三方框架的<code>Python</code> 文件，出现ImportError: No module named ** 错误<a href="post/Fix-Jenkins-bug-life#No2、-在构建的脚本里执行引入了第三方框架的Python-文件，出现ImportError-No-module-named-错误"></a></h3><p><strong>案件分析：</strong> 我这个爬虫的执行文件里内容如下</p><p><code>main.py</code></p><figure class="highlight python"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2018/11/29 15:58</span></span><br><span class="line"><span class="comment"># @Author  : Mars</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> cmdline</span><br><span class="line"></span><br><span class="line">cmdline.execute([<span class="string">'scrapy'</span>, <span class="string">'crawl'</span>, <span class="string">'此处为爬虫入口程序名'</span>])</span><br></pre></td></tr></table></div></figure><p>在Terminal 执行<figure class="highlight python"><figcaption><span>main.py``` 完全没问题，但部署到Jenkins 上就出现了如下错误</span></figcaption><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```shell</span><br><span class="line"> $ /bin/sh -xe /Users/Shared/Jenkins/tmp/jenkins4266129241674795365.sh</span><br><span class="line">+ python main.py</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"main.py"</span>, line <span class="number">20</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">from</span> scrapy <span class="keyword">import</span> cmdline</span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/scrapy/__init__.py"</span>, line <span class="number">27</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">from</span> . <span class="keyword">import</span> _monkeypatches</span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/scrapy/_monkeypatches.py"</span>, line <span class="number">20</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">import</span> twisted.persisted.styles  <span class="comment"># NOQA</span></span><br><span class="line">ImportError: No module named twisted.persisted.styles</span><br></pre></td></tr></table></div></figure></p><p>别怀疑你的<code>twisted</code>包是不是有问题，网上找了2、3天没找到同款条件下的同款问题，更没有同款答案了。我尝试了</p><ul><li>升级Jenkins</li><li>卸载重装<code>twisted</code></li><li>增加PYTHONPATH</li><li>增加PATH</li><li>…</li></ul><p>都没解决，最终我直接把程序放在桌面上，通过在Jenkins 里写一段</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /Users/Mars/Documents</span><br></pre></td></tr></table></div></figure><p>构建Jenkins 的时候又报错了</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> /bin/sh -xe /Users/Shared/Jenkins/tmp/jenkins3643154797228771836.sh</span><br><span class="line">+ cd /Users/Mars/Documents</span><br><span class="line">/Users/Shared/Jenkins/tmp/jenkins3643154797228771836.sh: line 2: cd: /Users/gatscm2/Documents: Permission denied</span><br></pre></td></tr></table></div></figure><p><code>Permission denied</code> 没权限，这时候我恍然大明白， 马上在Jenkins 的shell 脚本里敲下两个英文字母<code>id</code> 再构建一下。</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> /bin/sh -xe /Users/Shared/Jenkins/tmp/jenkins4686859629267551489.sh</span><br><span class="line">+ id</span><br><span class="line">uid=267(jenkins) gid=267(jenkins) egid=1(daemon) groups=267(jenkins),12(everyone),20(staff),61(localaccounts),79(_appserverusr),80(admin),81(_appserveradm),98(_lpadmin),702(com.apple.sharepoint.group.2),33(_appstore),100(_lpoperator),204(_developer),250(_analyticsusers),395(com.apple.access_ftp),101(com.apple.access_screensharing-disabled),102(com.apple.access_ssh-disabled)</span><br></pre></td></tr></table></div></figure><p>这下终于通了，原来Jenkins 系统里的所有操作都是以电脑用户<strong>Jenkins</strong> 的身份操作的，所以为什么会各种找不到module的情况出现。找到问题源头了，接下来解决问题。</p><p><strong>解决办法：</strong> 更改Jenkins 系统执行时的身份</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>停止Jenkins</span><br><span class="line"><span class="meta">$</span> sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 修改group 和user</span><br><span class="line"><span class="meta">$</span> sudo vim +1 +/daemon +’s/daemon/staff/’ +/daemon +’s/daemon/Mars’ +wq org.jenkins-ci.plist</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 修改之前文件的归属权限</span><br><span class="line"><span class="meta">$</span> sudo chown -R Mars:staff /Users/Shared/Jenkins/</span><br><span class="line"><span class="meta">$</span> sudo chown -R Mars:staff /var/log/jenkins</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 开始Jenkins</span><br><span class="line"><span class="meta">$</span> sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist</span><br></pre></td></tr></table></div></figure><p>第二步也可以直接打开文件修改，</p><p>找到key 标签为<code>GroupName</code> 对应的string 标签，把<code>daemon</code> 用<code>staff</code>  替换掉</p><p>找到key 标签为<code>UserName</code> 对应的string 标签，把<code>daemon</code> 用你电脑平常使用的用<strong>user name</strong> 替换掉</p><p>验证是否修改成功，再用<code>id</code> 命令试试</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> /bin/sh -xe /Users/Shared/Jenkins/tmp/jenkins1779228406794725443.sh</span><br><span class="line">+ id</span><br><span class="line">uid=502(Mars) gid=20(staff) groups=20(staff),702(com.apple.sharepoint.group.2),12(everyone),61(localaccounts),79(_appserverusr),80(admin),81(_appserveradm),98(_lpadmin),33(_appstore),100(_lpoperator),204(_developer),250(_analyticsusers),395(com.apple.access_ftp),101(com.apple.access_screensharing-disabled),102(com.apple.access_ssh-disabled)</span><br></pre></td></tr></table></div></figure><p>好了，问题解决了。<code>此处建议把Jenkins 的用户群组和用户名称改成电脑平时使用的账号，可以避免很多未知的坑</code></p><h3 id="No3、-Jenkins-使用GIT-插件后使用clone-代码，SSH-Key问题">No3、 Jenkins 使用GIT 插件后使用clone 代码，SSH Key问题<a href="post/Fix-Jenkins-bug-life#No3、-Jenkins-使用GIT-插件后使用clone-代码，SSH-Key问题"></a></h3><p><strong>案件分析：</strong> 在Jenkins 里使用git 出现权限问题，你可能记得你明明已经配好了SSH Key 的公钥，而且在本地shell 命令使用<code>git clone **</code> 也没问题，为什么Jenkins 里就不行了。</p><p><strong>解决办法：</strong> 用电脑本机的<code>.ssh</code> 文件替换掉Jenkins 目录下的<code>.ssh</code> 文件，  没错！又是因为Jenkins 有自己的一套私钥、公钥。</p><h3 id="Ending">Ending<a href="post/Fix-Jenkins-bug-life#Ending"></a></h3><p>这是第一次正正经经的写经验输出，有更好的解决思路、办法，欢迎留言抨击，共同成长。</p><p>再说说写的过程中，怎么碰到的问题，怎么去分析，怎么去解决。特别是怎么去分析可能在解决问题之后会觉得解决的思路很傻，但是在没有外力帮助的情况下，自己是怎么去解决的，记录下来后。</p><p>转过身来看，嗯！这就是成长！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;a href=&quot;post/Fix-Jenkins-bug-life#前言&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;环境&quot;&gt;环境&lt;a href=&quot;post/Fix-Jenkins-bug-life#环境&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;MacOS&lt;/p&gt;
&lt;h3
      
    
    </summary>
    
    
      <category term="Jenkins" scheme="http://marshou.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Upgrade node on mac</title>
    <link href="http://marshou.github.io/post/upgrade-node-on-mac/"/>
    <id>http://marshou.github.io/post/upgrade-node-on-mac/</id>
    <published>2018-07-18T01:52:09.000Z</published>
    <updated>2019-08-20T05:53:16.694Z</updated>
    
    <content type="html"><![CDATA[<h5 id="STEP-1">STEP 1<a href="post/upgrade-node-on-mac#STEP-1"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo npm cache clean -f</span><br><span class="line">Password:</span><br><span class="line">npm WARN using --force I sure hope you know what you are doing.</span><br></pre></td></tr></table></div></figure><h5 id="STEP-2">STEP 2<a href="post/upgrade-node-on-mac#STEP-2"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo npm install -g n</span><br><span class="line">/usr/local/bin/n -&gt; /usr/local/lib/node_modules/n/bin/n</span><br><span class="line">/usr/local/lib</span><br><span class="line">└── n@2.1.12</span><br></pre></td></tr></table></div></figure><h5 id="STEP-3">STEP 3<a href="post/upgrade-node-on-mac#STEP-3"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo n stable</span><br><span class="line"></span><br><span class="line">     install : node-v10.6.0</span><br><span class="line">       mkdir : /usr/local/n/versions/node/10.6.0</span><br><span class="line">       fetch : https://nodejs.org/dist/v10.6.0/node-v10.6.0-darwin-x64.tar.gz</span><br><span class="line"><span class="meta">#</span>####################################################################### 100.0%</span><br><span class="line">   installed : v10.6.0</span><br></pre></td></tr></table></div></figure><h5 id="STEP-4">STEP 4<a href="post/upgrade-node-on-mac#STEP-4"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> node -v</span><br><span class="line">v10.6.0</span><br></pre></td></tr></table></div></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;STEP-1&quot;&gt;STEP 1&lt;a href=&quot;post/upgrade-node-on-mac#STEP-1&quot;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="Node" scheme="http://marshou.github.io/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>How remote linux of ssh</title>
    <link href="http://marshou.github.io/post/how-remote-linux-of-ssh/"/>
    <id>http://marshou.github.io/post/how-remote-linux-of-ssh/</id>
    <published>2018-07-17T03:26:56.000Z</published>
    <updated>2019-08-20T05:53:18.772Z</updated>
    
    <content type="html"><![CDATA[<p>Use terminal remote linux server. Just need a Command!!! <code>ssh username@ip -pport</code></p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.163.1.1 -p8989</span><br></pre></td></tr></table></div></figure><p>Then input your password of remote server</p><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ssh root@192.163.1.1 -p8989</span><br><span class="line">root@192.163.1.1's password:</span><br><span class="line">[root@host ~]#</span><br></pre></td></tr></table></div></figure><p>If need modify your root password. Can try the  <code>passwd</code>  command.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Use terminal remote linux server. Just need a Command!!! &lt;code&gt;ssh username@ip -pport&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;div&gt;&lt;ta
      
    
    </summary>
    
    
      <category term="ShadowSocks" scheme="http://marshou.github.io/tags/ShadowSocks/"/>
    
  </entry>
  
  <entry>
    <title>Install Shadowsocks on CentOS</title>
    <link href="http://marshou.github.io/post/centos-install-ssh/"/>
    <id>http://marshou.github.io/post/centos-install-ssh/</id>
    <published>2018-07-16T09:24:50.000Z</published>
    <updated>2019-08-20T05:53:14.407Z</updated>
    
    <content type="html"><![CDATA[<h4 id="STEP">STEP<a href="post/centos-install-ssh#STEP"></a></h4><h5 id="STEP-1">STEP 1<a href="post/centos-install-ssh#STEP-1"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</span><br></pre></td></tr></table></div></figure><p>If prompt error <code>bash: wget: command not found</code>.  First execute <code>yum -y install wget</code>.</p><h5 id="STEP-2">STEP 2<a href="post/centos-install-ssh#STEP-2"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x shadowsocks-all.sh</span><br></pre></td></tr></table></div></figure><h5 id="STEP-3">STEP 3<a href="post/centos-install-ssh#STEP-3"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</span><br></pre></td></tr></table></div></figure><h5 id="STEP-4">STEP 4<a href="post/centos-install-ssh#STEP-4"></a></h5><p>Setting password and port.</p><h5 id="STEP-5">STEP 5<a href="post/centos-install-ssh#STEP-5"></a></h5><p>Select 7(aes-256-cfb). Because only use cfb on wingy.</p><h5 id="STEP-6">STEP 6<a href="post/centos-install-ssh#STEP-6"></a></h5><p>Press any key to start…or Press Ctrl+C to cancel</p><h4 id="EXAMPLE">EXAMPLE<a href="post/centos-install-ssh#EXAMPLE"></a></h4><h5 id="STEP1">STEP1<a href="post/centos-install-ssh#STEP1"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@host ~]# wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadow</span><br><span class="line">socks_install/master/shadowsocks-all.sh</span><br><span class="line">-bash: wget: command not found</span><br></pre></td></tr></table></div></figure><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@host ~]# yum -y install wget</span><br></pre></td></tr></table></div></figure><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@host ~]# wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadow</span><br><span class="line">socks_install/master/shadowsocks-all.sh</span><br></pre></td></tr></table></div></figure><h5 id="STEP2">STEP2<a href="post/centos-install-ssh#STEP2"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x shadowsocks-all.sh</span><br></pre></td></tr></table></div></figure><h5 id="STEP3">STEP3<a href="post/centos-install-ssh#STEP3"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</span><br></pre></td></tr></table></div></figure><h5 id="STEP4">STEP4<a href="post/centos-install-ssh#STEP4"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Failed to set locale, defaulting to C</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Setting up Install Process</span><br><span class="line">Determining fastest mirrors</span><br><span class="line"> * base: centos.mirror.ndchost.com</span><br><span class="line"> * elrepo-kernel: repos.lax-noc.com</span><br><span class="line">Which Shadowsocks server you'd select:</span><br><span class="line">1) Shadowsocks-Python</span><br><span class="line">2) ShadowsocksR</span><br><span class="line">3) Shadowsocks-Go</span><br><span class="line">4) Shadowsocks-libev</span><br><span class="line">Please enter a number (Default Shadowsocks-Python):</span><br><span class="line"></span><br><span class="line">You choose = Shadowsocks-Python</span><br></pre></td></tr></table></div></figure><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Please enter password for Shadowsocks-Python</span><br><span class="line">(Default password: teddysun.com):teddysun.com</span><br><span class="line"></span><br><span class="line">password = teddysun.com</span><br></pre></td></tr></table></div></figure><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Please enter a port for Shadowsocks-Python [1-65535]</span><br><span class="line">(Default port: 17945):17945</span><br><span class="line"></span><br><span class="line">port = 17945</span><br></pre></td></tr></table></div></figure><h5 id="STEP5">STEP5<a href="post/centos-install-ssh#STEP5"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Please select stream cipher for Shadowsocks-Python:</span><br><span class="line">1) aes-256-gcm</span><br><span class="line">2) aes-192-gcm</span><br><span class="line">3) aes-128-gcm</span><br><span class="line">4) aes-256-ctr</span><br><span class="line">5) aes-192-ctr</span><br><span class="line">6) aes-128-ctr</span><br><span class="line">7) aes-256-cfb</span><br><span class="line">8) aes-192-cfb</span><br><span class="line">9) aes-128-cfb</span><br><span class="line">10) camellia-128-cfb</span><br><span class="line">11) camellia-192-cfb</span><br><span class="line">12) camellia-256-cfb</span><br><span class="line">13) xchacha20-ietf-poly1305</span><br><span class="line">14) chacha20-ietf-poly1305</span><br><span class="line">15) chacha20-ietf</span><br><span class="line">16) chacha20</span><br><span class="line">17) salsa20</span><br><span class="line">18) rc4-md5</span><br><span class="line">Which cipher you'd select(Default: aes-256-gcm):7</span><br><span class="line"></span><br><span class="line">cipher = aes-256-cfb</span><br></pre></td></tr></table></div></figure><h5 id="STEP6">STEP6<a href="post/centos-install-ssh#STEP6"></a></h5><figure class="highlight shell"><div><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Press any key to start...or Press Ctrl+C to cancel</span><br><span class="line">[Info] Checking the EPEL repository...</span><br><span class="line">... ...</span><br><span class="line">... ...</span><br><span class="line">... ...</span><br><span class="line">INFO: loading config from /etc/shadowsocks-python/config.json</span><br><span class="line">2018-07-16 00:05:22 INFO     loading libcrypto from libcrypto.so.10</span><br><span class="line">Starting Shadowsocks success</span><br><span class="line"></span><br><span class="line">Congratulations, Shadowsocks-Python server install completed!</span><br><span class="line">Your Server IP        :  95.169.1.110</span><br><span class="line">Your Server Port      :  17945</span><br><span class="line">Your Password         :  teddysun.com</span><br><span class="line">Your Encryption Method:  aes-256-cfb</span><br><span class="line"></span><br><span class="line">Your QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients)</span><br><span class="line"> ss://YWVzLTI1Ni1jZmI6TWFyczUyMDEzMUA5NS4xNjkuMS5xMTc7ODk4OQ==</span><br><span class="line">Your QR Code has been saved as a PNG file path:</span><br><span class="line"> /root/shadowsocks_python_qr.png</span><br><span class="line"></span><br><span class="line">Welcome to visit: https://teddysun.com/486.html</span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></div></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;STEP&quot;&gt;STEP&lt;a href=&quot;post/centos-install-ssh#STEP&quot;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h5 id=&quot;STEP-1&quot;&gt;STEP 1&lt;a href=&quot;post/centos-install-ssh#STEP-1&quot;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;f
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Preface</title>
    <link href="http://marshou.github.io/post/Preface/"/>
    <id>http://marshou.github.io/post/Preface/</id>
    <published>2017-10-11T07:46:28.000Z</published>
    <updated>2019-08-20T05:53:10.846Z</updated>
    
    <content type="html"><![CDATA[<p>Eventually, I choiced write blog. I am born the 90s of Chinese family, Poor learning, very lazy, liked cool. Sorry, My English is very poor, I still use English write blog, So what? I hope to improve my English, professional skills and help everyone, by wirting blogs. This’s my original intention of wirting blog. Ok, Gone… See you soon.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Eventually, I choiced write blog. I am born the 90s of Chinese family, Poor learning, very lazy, liked cool. Sorry, My English is very po
      
    
    </summary>
    
    
  </entry>
  
</feed>
